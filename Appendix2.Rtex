

%%begin.rcode settings, echo = FALSE, cache = FALSE, message = FALSE, results = 'hide', eval = TRUE



# There are figures created in the data analysis which are not in the final chapter document.
#   If TRUE, they will be included in the output.
#   Use 'hide' to remove them.
extraFigs <- 'hide'

#knitr options
#  Set figure prefix as A so that no figures will be overwritten.
opts_chunk$set(cache.path = '.AppCh2Cache/', fig.path = 'figure/A-')
source('misc/KnitrOptions.R')

# ggplot2 theme.
source('misc/theme_tcdl.R')
theme_set(theme_grey() + theme_tcdl)


# Choose the number of cores to use
nCores <- 6

%%end.rcode


%%begin.rcode simsSwitch

runSims <- FALSE

%%end.rcode

%%begin.rcode libs

library(MetapopEpi)
library(cowplot)


%%end.rcode



%%begin.rcode SimLengths2

  # These apply to both topo and disp sims. And probably should apply to extinction sims if I include them.
  # How long should the simulation last?
  nEvent <- 8e5

  # When should the invading pathogen be added.
  invadeT <- 3e5


  # 
  sample <- 1000

%%end.rcode

%%begin.rcode sims, eval = runSims

# Run simulations


  set.seed(22)

  # Make the population.
  p2 <- makePop(model = 'SIR', events = nEvent, nColonies = 10, nPathogens = 2,   recovery = 1,  sample = sample, dispersal = 0.1, birth = 0.05, death = 0.05, crossImmunity = 0.1, meanColonySize = 3000, infectDeath = 0, transmission = 0.2, maxDistance = 100, colonySpatialDistr = 'circle')

  # Seed endemic pathogen.
  for(i in 1:10){
    p2 <- seedPathogen(p2, 2, n = 200, diffCols = FALSE)
  }

  # Burn in simulation
  p2 <- runSim(p2, end = invadeT)

  # Seed invading pathogen.
  p2$I[2, 1, (invadeT + 1) %% sample] <- 5
  
  # Recalculate rates of each event after seeding.
  p2 <- transRates(p2, (invadeT + 1) %% sample)

  # Continue simulation
  p2 <- runSim(p2, start = invadeT + 1, end = 'end')

  save(p2, file = 'data/Chapter2/Appen22.RData')





  set.seed(24)

  # Make the population.
  p2 <- makePop(model = 'SIR', events = nEvent, nColonies = 10, nPathogens = 2,   recovery = 1,  sample = sample, dispersal = 0.1, birth = 0.05, death = 0.05, crossImmunity = 0.1, meanColonySize = 3000, infectDeath = 0, transmission = 0.2, maxDistance = 100, colonySpatialDistr = 'circle')

  # Seed endemic pathogen.
  for(i in 1:10){
    p2 <- seedPathogen(p2, 2, n = 200, diffCols = FALSE)
  }

  # Burn in simulation
  p2 <- runSim(p2, end = invadeT)

  # Seed invading pathogen.
  p2$I[2, 1, (invadeT + 1) %% sample] <- 5
  
  # Recalculate rates of each event after seeding.
  p2 <- transRates(p2, (invadeT + 1) %% sample)

  # Continue simulation
  p2 <- runSim(p2, start = invadeT + 1, end = 'end')

  save(p2, file = 'data/Chapter2/Appen24.RData')






%%end.rcode 




% --------------------------------------------------------------------------- %
% Invading pathogen plots
% --------------------------------------------------------------------------- %

%%begin.rcode invadeCapts


#p2 <- makePop(model = 'SIR', events = nEvent, nColonies = 10, nPathogens = 2,   recovery = 1,  sample = sample, dispersal = 0.1, birth = 0.05, death = 0.05, crossImmunity = 0.1, meanColonySize = 3000, infectDeath = 0, transmission = 0.2, maxDistance = 100, colonySpatialDistr = 'circle')


invadeTitle <-
'
Examples of simulated SIR dynamics with succesfull invasions
'



invadeCapt <- 
'
Two examples (A and B) of a succesful invasion plotted on a logged $y$-axis.
The lines are coloured such that blue represents susceptibles, brown represents individuals infected with one pathogen (the two seperate brown lines are pathogen 1 and 2), black represents co-infected individuals and yellow represents recovered and immune individuals.
Pathogen 2 is seeded after $3\times 10^4$ events (approximately 30 years).
Simulations are run on a fully-connected network.
Parameter values are: dispersal rate = 0.1, transmission rate = 0.2.
All other parameters are as stated in Table~\\ref{t:params}.
'


%%end.rcode


%%begin.rcode plotsInvade, fig.cap = invadeCapt, fig.scap = invadeTitle, fig.height = 5, out.width = "\\textwidth" 

load('data/Chapter2/Appen1.RData')
findDisDistr(p1, 2)[1] > 0
invade1 <- pSIR(p1) + 
            theme_tcdl + 
            scale_y_log10() + 
            scale_colour_poke(pokemon = 'Loudred', spread = 4) +
            xlab('Time (years)')

load('data/Chapter2/Appen24.RData')
findDisDistr(p2, 2)[1] > 0
invade2 <- pSIR(p2) + 
            theme_tcdl + 
            scale_y_log10() + 
            scale_colour_poke(pokemon = 'Loudred', spread = 4) +
            xlab('Time (years)')


# Combine and print the plots.
ggdraw() +
  draw_label("A)", 0.02, 0.98, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(invade1, 0, 0, 1, 0.5) +
  draw_label("B)", 0.02, 0.48, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(invade2, 0, 0.5, 1, 0.5) 


  
%%end.rcode



% --------------------------------------------------------------------------- %
% No invasion plots
% --------------------------------------------------------------------------- %



%%begin.rcode noInvadeCapts

noInvadeTitle <- c(
'
Examples of simulated SIR dynamics with nusuccesfull invasions
',
'
Examples of colony size dynamics
'
)



noInvadeCapt <- c(
'
Two examples (A and B) of an unsuccesful invasion plotted on a logged $y$-axis.
The lines are coloured such that blue represents susceptibles, brown represents individuals infected with one pathogen (the two seperate brown lines are pathogen 1 and 2), black represents co-infected individuals and yellow represents recovered and immune individuals.
Pathogen 2 is seeded after $3\times 10^4$ events (approximately 30 years).
It can be seen that after seeding pathogen 2, there is a very short period before extinction as opposed to a long fade out of disease.
Simulations are run on a fully-connected network.
Parameter values are: dispersal rate = 0.1, transmission rate = 0.2.
All other parameters are as stated in Table~\\ref{t:params}.
',
'
Two examples (A and B) of the change in colony sizes throughout a simulation (note the truncated $y$-axis).
The size of each colony changes as a random walk.
However, given the length of the simulations, there is little risk of colonies going extinct or becoming very large.
Birth and death rate are equal and set to 0.05, giving a generation time of 20 years.
The metapopulation network is fully-connected and the dispersal rate is 0.1 per year.
The starting colony size is 3,000.
'
)

%%end.rcode



%%begin.rcode plotsNoInvade, fig.cap = noInvadeCapt, fig.scap = noInvadeTitle, fig.height = 5, out.width = c("\\textwidth", "0.8\\textwidth")

load('data/Chapter2/Appen22.RData')

noInvade1 <- pSIR(p2) + 
               theme_tcdl + 
               scale_y_log10() + 
               scale_colour_poke(pokemon = 'Loudred', spread = 4) + 
               xlab('Time (years)')
pop1 <- pPop(p2) + theme_tcdl + xlab('Time (years)')


load('data/Chapter2/Appen25.RData')


noInvade2 <- pSIR(p2) + 
               theme_tcdl + 
               scale_y_log10() + 
               scale_colour_poke(pokemon = 'Loudred', spread = 4) +
               xlab('Time (years)')
pop2 <- pPop(p2) + theme_tcdl + xlab('Time (years)')


# Combine and print the plots.
ggdraw() +
  draw_label("A)", 0.02, 0.98, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(noInvade1, 0, 0, 1, 0.5) +
  draw_label("B)", 0.02, 0.48, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(noInvade2, 0, 0.5, 1, 0.5) 

  


# Combine and print the plots.
ggdraw() +
  draw_label("A)", 0.02, 0.98, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(pop1, 0, 0, 1, 0.5) +
  draw_label("B)", 0.02, 0.48, size = 10, fontface = 'plain', fontfamily = 'lato light') + 
  draw_plot(pop2, 0, 0.5, 1, 0.5) 

  



%%end.rcode






